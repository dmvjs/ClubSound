name: iOS Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build and Test
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
      
    - name: Create Standalone Test Project
      run: |
        # Create a completely standalone test project with separate directories
        mkdir -p StandaloneTests/Sources/StandaloneTests
        mkdir -p StandaloneTests/Tests/StandaloneTestsTests
        
        # Create a simple source file
        cat > StandaloneTests/Sources/StandaloneTests/Utils.swift << 'EOF'
        public struct Utils {
            public static func add(_ a: Int, _ b: Int) -> Int {
                return a + b
            }
            
            public static func multiply(_ a: Int, _ b: Int) -> Int {
                return a * b
            }
        }
        EOF
        
        # Create a simple test file
        cat > StandaloneTests/Tests/StandaloneTestsTests/BasicTests.swift << 'EOF'
        import XCTest
        @testable import StandaloneTests

        final class BasicTests: XCTestCase {
            func testExample() {
                // This is a simple test that always passes
                XCTAssertTrue(true)
            }
            
            func testMath() {
                // Basic math test
                XCTAssertEqual(2 + 2, 4)
            }
            
            func testUtils() {
                XCTAssertEqual(Utils.add(2, 2), 4)
                XCTAssertEqual(Utils.multiply(3, 4), 12)
            }
        }
        EOF
        
        # Create a Package.swift file with proper directory structure
        cat > StandaloneTests/Package.swift << 'EOF'
        // swift-tools-version:5.5
        import PackageDescription

        let package = Package(
            name: "StandaloneTests",
            platforms: [.macOS(.v12)],
            products: [
                .library(name: "StandaloneTests", targets: ["StandaloneTests"]),
            ],
            targets: [
                .target(
                    name: "StandaloneTests",
                    dependencies: []
                ),
                .testTarget(
                    name: "StandaloneTestsTests",
                    dependencies: ["StandaloneTests"]
                ),
            ]
        )
        EOF
        
    - name: Run Swift Package Tests
      run: |
        cd StandaloneTests
        swift test 